points(X,cex=0.1,pch='.')
library(spatstat)
library(R.matlab)
if(require(RandomFields)) {
# homogeneous LGCP with exponential covariance function
X <- rLGCP("exp", mu=-11.5, var=2.9, scale=2000, win=owin(c(0, 31500), c(0, 31500)), nsim=1)
}
# highscale = 600
# lowmu = -11.5
# default scale = 20
#default mu = -10.26
soil_LGCP <- as.matrix(as.data.frame(X))
#writeMat("soil_LGCP.mat", soil_LGCP=soil_LGCP)
plot(attr(X, "Lambda"))
points(X,cex=0.1,pch='.')
library(spatstat)
library(R.matlab)
if(require(RandomFields)) {
# homogeneous LGCP with exponential covariance function
X <- rLGCP("exp", mu=-11.5, var=2.9, scale=2000, win=owin(c(0, 31500), c(0, 31500)), nsim=1)
}
# highscale = 600
# lowmu = -11.5
# default scale = 20
#default mu = -10.26
soil_LGCP <- as.matrix(as.data.frame(X))
#writeMat("soil_LGCP.mat", soil_LGCP=soil_LGCP)
plot(attr(X, "Lambda"))
points(X,cex=0.1,pch='.')
library(spatstat)
library(R.matlab)
if(require(RandomFields)) {
# homogeneous LGCP with exponential covariance function
X <- rLGCP("exp", mu=-11.5, var=2.9, scale=20, win=owin(c(0, 31500), c(0, 31500)), nsim=1)
}
# highscale = 600
# lowmu = -11.5
# default scale = 20
#default mu = -10.26
soil_LGCP <- as.matrix(as.data.frame(X))
#writeMat("soil_LGCP.mat", soil_LGCP=soil_LGCP)
plot(attr(X, "Lambda"))
points(X,cex=0.1,pch='.')
library(spatstat)
library(R.matlab)
if(require(RandomFields)) {
# homogeneous LGCP with exponential covariance function
X <- rLGCP("exp", mu=-11.5, var=2.9, scale=600, win=owin(c(0, 31500), c(0, 31500)), nsim=1)
}
# highscale = 600
# lowmu = -11.5
# default scale = 20
#default mu = -10.26
soil_LGCP <- as.matrix(as.data.frame(X))
#writeMat("soil_LGCP.mat", soil_LGCP=soil_LGCP)
plot(attr(X, "Lambda"))
points(X,cex=0.1,pch='.')
View(soil_LGCP)
install.packages('GenOrd')
k <- 4
# with these marginal distributions
marginal <- list(0.4,c(0.3,0.6), c(0.25,0.5,0.75), c(0.1,0.2,0.8,0.9))
# generated discretizing a multivariate standard normal variable
# with correlation matrix
Sigma <- matrix(0.5,4,4)diag(Sigma) <- 1
# the resulting correlation matrix for the discrete variables is
contord(marginal, Sigma)
k <- 4
# with these marginal distributions
marginal <- list(0.4,c(0.3,0.6), c(0.25,0.5,0.75), c(0.1,0.2,0.8,0.9))
# generated discretizing a multivariate standard normal variable
# with correlation matrix
Sigma <- matrix(0.5,4,4)
diag(Sigma) <- 1
# the resulting correlation matrix for the discrete variables is
contord(marginal, Sigma)
library(GenOrd)
# consider 4 discrete variables
k <- 4
install.packages('GenOrd')
library(GenOrd)
# consider 4 discrete variables
k <- 4
# with these marginal distributions
marginal <- list(0.4,c(0.3,0.6), c(0.25,0.5,0.75), c(0.1,0.2,0.8,0.9))
# generated discretizing a multivariate standard normal variable
# with correlation matrix
Sigma <- matrix(0.5,4,4)
diag(Sigma) <- 1
# the resulting correlation matrix for the discrete variables is
contord(marginal, Sigma)
install.packages('GenOrd')
library(GenOrd)
# consider 4 discrete variables
k <- 4
# with these marginal distributions
marginal <- list(0.4,c(0.3,0.6), c(0.25,0.5,0.75), c(0.1,0.2,0.8,0.9))
# generated discretizing a multivariate standard normal variable
# with correlation matrix
Sigma <- matrix(0.5,4,4)
diag(Sigma) <- 1
# the resulting correlation matrix for the discrete variables is
contord(marginal, Sigma)
install.packages("GenOrd")
matrix(0.5,4,4)
0:3
list(0:10, 0:20)
library(spatstat)
library(R.matlab)
library(RandomFields)
library(pracma)
# homogeneous LGCP with exponential covariance function
# values reported in Raynaud and Nunan for 10^9 cells per g of soil
# scale = 25
# mu = -7.52
# var = 1.9
var_p <- 1.29 #1.9
mu_p <- -4.91 # -7.52
scale_p <- 25
xwin = c(0,1000)
ywin = c(0,3000)
X <- rLGCP("exp", mu=mu_p, var=var_p, scale=scale_p, win=owin(xwin, ywin), nsim=500)
total <- 0
for (val in 1:500)
{
ind <- paste("Simulation",val)
total <- total + X[[ind]][["n"]]
}
total <- total/500
total
exp(mu_p + var_p/2)
exp(-mu_p - var_p/2)
exp(mu_p + var_p/2)*3000*1000
exp(mu_p + var_p/2)*3001*1001
scale_p <- 25
xwin = c(0,1000)
ywin = c(0,3000)
vec = c(logspace(-3,1.5,10),80)
target_val = 42211.82 #exp(mu_p + var_p/2)*3001*1001
for(val in 0.001)
{
var_p <- 1.29 - (1.29-val)
mu_p <- -4.91 + (1.29-val)/2
X <- rLGCP("exp", mu=mu_p, var=var_p, scale=scale_p, win=owin(xwin, ywin), nsim=1000)
total = c()
for (ii in 1:1000)
{
ind <- paste("Simulation",ii)
total <- c(total,X[[ind]][["n"]])
}
X <- X[[paste("Simulation",which.min(abs(total-target_val)))]]
print(X[["n"]])
plot(X)
soil_LGCP <- as.matrix(as.data.frame(X))
#writeMat(paste("soil_var_",val,".mat",sep=""), soil_LGCP=soil_LGCP, var_p=var_p,
#        mu_p=mu_p, scale_p=scale_p, xwin=xwin, ywin=ywin)
}
for(val in 1.29)
{
var_p <- 1.29 - (1.29-val)
mu_p <- -4.91 + (1.29-val)/2
X <- rLGCP("exp", mu=mu_p, var=var_p, scale=scale_p, win=owin(xwin, ywin), nsim=1000)
total = c()
for (ii in 1:1000)
{
ind <- paste("Simulation",ii)
total <- c(total,X[[ind]][["n"]])
}
X <- X[[paste("Simulation",which.min(abs(total-target_val)))]]
print(X[["n"]])
plot(X)
soil_LGCP <- as.matrix(as.data.frame(X))
#writeMat(paste("soil_var_",val,".mat",sep=""), soil_LGCP=soil_LGCP, var_p=var_p,
#        mu_p=mu_p, scale_p=scale_p, xwin=xwin, ywin=ywin)
}
exp(-4.91 + 1.29/2)*3001*1001
exp(-8.91 + 1.29/2)*3001*1001
exp(-6.91 + 1.29/2)*3001*1001
exp(-7.91 + 1.29/2)*3001*1001
exp(-5.91 + 1.29/2)*3001*1001
for(val in 1.29)
{
var_p <- 1.29 - (1.29-val)
mu_p <- -5.91 + (1.29-val)/2
X <- rLGCP("exp", mu=mu_p, var=var_p, scale=scale_p, win=owin(xwin, ywin), nsim=1000)
total = c()
for (ii in 1:1000)
{
ind <- paste("Simulation",ii)
total <- c(total,X[[ind]][["n"]])
}
X <- X[[paste("Simulation",which.min(abs(total-target_val)))]]
print(X[["n"]])
plot(X)
soil_LGCP <- as.matrix(as.data.frame(X))
#writeMat(paste("soil_var_",val,".mat",sep=""), soil_LGCP=soil_LGCP, var_p=var_p,
#        mu_p=mu_p, scale_p=scale_p, xwin=xwin, ywin=ywin)
}
target_val = 15528.86 #exp(mu_p + var_p/2)*3001*1001
for(val in 1.29)
{
var_p <- 1.29 - (1.29-val)
mu_p <- -5.91 + (1.29-val)/2
X <- rLGCP("exp", mu=mu_p, var=var_p, scale=scale_p, win=owin(xwin, ywin), nsim=1000)
total = c()
for (ii in 1:1000)
{
ind <- paste("Simulation",ii)
total <- c(total,X[[ind]][["n"]])
}
X <- X[[paste("Simulation",which.min(abs(total-target_val)))]]
print(X[["n"]])
plot(X)
soil_LGCP <- as.matrix(as.data.frame(X))
#writeMat(paste("soil_var_",val,".mat",sep=""), soil_LGCP=soil_LGCP, var_p=var_p,
#        mu_p=mu_p, scale_p=scale_p, xwin=xwin, ywin=ywin)
}
for(val in 0.001)
{
var_p <- 1.29 - (1.29-val)
mu_p <- -5.91
X <- rLGCP("exp", mu=mu_p, var=var_p, scale=scale_p, win=owin(xwin, ywin), nsim=1000)
total = c()
for (ii in 1:1000)
{
ind <- paste("Simulation",ii)
total <- c(total,X[[ind]][["n"]])
}
X <- X[[paste("Simulation",which.min(abs(total-target_val)))]]
print(X[["n"]])
plot(X)
soil_LGCP <- as.matrix(as.data.frame(X))
#writeMat(paste("soil_var_",val,".mat",sep=""), soil_LGCP=soil_LGCP, var_p=var_p,
#        mu_p=mu_p, scale_p=scale_p, xwin=xwin, ywin=ywin)
}
for(val in 0.001)
{
var_p <- 1.29 - (1.29-val)
mu_p <- -5.91 + (1.29-val)/2
X <- rLGCP("exp", mu=mu_p, var=var_p, scale=scale_p, win=owin(xwin, ywin), nsim=1000)
total = c()
for (ii in 1:1000)
{
ind <- paste("Simulation",ii)
total <- c(total,X[[ind]][["n"]])
}
X <- X[[paste("Simulation",which.min(abs(total-target_val)))]]
print(X[["n"]])
plot(X)
soil_LGCP <- as.matrix(as.data.frame(X))
#writeMat(paste("soil_var_",val,".mat",sep=""), soil_LGCP=soil_LGCP, var_p=var_p,
#        mu_p=mu_p, scale_p=scale_p, xwin=xwin, ywin=ywin)
}
setwd("~/Documents/OneDrive - California Institute of Technology/SpatialComp/paper_code/figure_2/soil")
for(val in c(0.001,1.29,80))
{
var_p <- 1.29 - (1.29-val)
mu_p <- -5.91 + (1.29-val)/2
X <- rLGCP("exp", mu=mu_p, var=var_p, scale=scale_p, win=owin(xwin, ywin), nsim=1000)
total = c()
for (ii in 1:1000)
{
ind <- paste("Simulation",ii)
total <- c(total,X[[ind]][["n"]])
}
X <- X[[paste("Simulation",which.min(abs(total-target_val)))]]
print(X[["n"]])
plot(X)
soil_LGCP <- as.matrix(as.data.frame(X))
writeMat(paste("soil_var_",val,".mat",sep=""), soil_LGCP=soil_LGCP, var_p=var_p,
mu_p=mu_p, scale_p=scale_p, xwin=xwin, ywin=ywin)
}
for(val in c(0.001,1.29,60))
{
var_p <- 1.29 - (1.29-val)
mu_p <- -5.91 + (1.29-val)/2
X <- rLGCP("exp", mu=mu_p, var=var_p, scale=scale_p, win=owin(xwin, ywin), nsim=1000)
total = c()
for (ii in 1:1000)
{
ind <- paste("Simulation",ii)
total <- c(total,X[[ind]][["n"]])
}
X <- X[[paste("Simulation",which.min(abs(total-target_val)))]]
print(X[["n"]])
plot(X)
soil_LGCP <- as.matrix(as.data.frame(X))
writeMat(paste("soil_var_",val,".mat",sep=""), soil_LGCP=soil_LGCP, var_p=var_p,
mu_p=mu_p, scale_p=scale_p, xwin=xwin, ywin=ywin)
}
for(val in c(0.001,1.29,50))
{
var_p <- 1.29 - (1.29-val)
mu_p <- -5.91 + (1.29-val)/2
X <- rLGCP("exp", mu=mu_p, var=var_p, scale=scale_p, win=owin(xwin, ywin), nsim=1000)
total = c()
for (ii in 1:1000)
{
ind <- paste("Simulation",ii)
total <- c(total,X[[ind]][["n"]])
}
X <- X[[paste("Simulation",which.min(abs(total-target_val)))]]
print(X[["n"]])
plot(X)
soil_LGCP <- as.matrix(as.data.frame(X))
#writeMat(paste("soil_var_",val,".mat",sep=""), soil_LGCP=soil_LGCP, var_p=var_p,
#        mu_p=mu_p, scale_p=scale_p, xwin=xwin, ywin=ywin)
}
setwd("~/Documents/OneDrive - California Institute of Technology/SpatialComp/paper_code/figure_2/data_code/soil")
setwd(getSrcDirectory()[1])
getSrcDirectory()
current_path = rstudioapi::getActiveDocumentContext()$path
current_path
library(spatstat)
library(R.matlab)
library(RandomFields)
library(pracma)
# homogeneous LGCP with exponential covariance function
# values reported in Raynaud and Nunan for 10^9 cells per g of soil
# scale = 25
# mu = -7.52
# var = 1.9
var_p <- 1.9
mu_p <- -7.52
scale_p <- 25
xwin = c(0,1000)
ywin = c(0,3000)
X <- rLGCP("exp", mu=mu_p, var=var_p, scale=scale_p, win=owin(xwin, ywin), nsim=1)
# checking total cell number
# total <- 0
# for (val in 1:500)
# {
#   ind <- paste("Simulation",val)
#   total <- total + X[[ind]][["n"]]
# }
# total <- total/500
# total
soil_LGCP <- as.matrix(as.data.frame(X))
plot(X)
# writing all bacteria position into Matlab file
writeMat("soil_var_2.mat", soil_LGCP=soil_LGCP, var_p=var_p,
mu_p=mu_p, scale_p=scale_p, xwin=xwin, ywin=ywin)
clear
setwd("~/Documents/OneDrive - California Institute of Technology/SpatialComp/paper_code/figure_2/data_code/soil")
target_val = 4255 #exp(mu_p + var_p/2)*3001*1001
library(spatstat)
library(R.matlab)
library(RandomFields)
library(pracma)
# generating different environments by varying bacterial dispersion (var_p)
# average intensity (number of cells) = exp(mu + var/2) (as var changes, mu needs to be adjusted
# to keep intensity fixed)
scale_p <- 25
xwin = c(0,1000)
ywin = c(0,3000)
vec = c(logspace(-3,1.5,10),80)
target_val = 4255 #exp(mu_p + var_p/2)*3001*1001
for(val in c(0.001,1.29,50))
{
var_p <- 1.9 - (1.9-val)
mu_p <- -7.52 + (1.9-val)/2
X <- rLGCP("exp", mu=mu_p, var=var_p, scale=scale_p, win=owin(xwin, ywin), nsim=2000)
total = c()
for (ii in 1:2000)
{
ind <- paste("Simulation",ii)
total <- c(total,X[[ind]][["n"]])
}
X <- X[[paste("Simulation",which.min(abs(total-target_val)))]]
print(X[["n"]])
plot(X)
soil_LGCP <- as.matrix(as.data.frame(X))
writeMat(paste("soil_var_",val,".mat",sep=""), soil_LGCP=soil_LGCP, var_p=var_p,
mu_p=mu_p, scale_p=scale_p, xwin=xwin, ywin=ywin)
}
vec = c(logspace(-3,1.5,10),80)
vec
var_p <- 1.9
mu_p <- -7.52
scale_p <- 25
exp(mu_p + var_p/2)*3001*1001
total <- c(total,X[[ind]][["n"]])
library(spatstat)
library(R.matlab)
library(RandomFields)
library(pracma)
# generating different environments by varying bacterial dispersion (var_p)
# average intensity (number of cells) = exp(mu + var/2) (as var changes, mu needs to be adjusted
# to keep intensity fixed)
var_p <- 1.9
mu_p <- -7.52
scale_p <- 25
xwin = c(0,1000)
ywin = c(0,3000)
vec = c(logspace(-3,1.5,10),80)
target_val = exp(mu_p + var_p/2)*3001*1001 # expected number of bacteria in sim domain
nsim = 2000
for(val in vec)
{
var_p <- 1.9 - (1.9-val)
mu_p <- -7.52 + (1.9-val)/2
X <- rLGCP("exp", mu=mu_p, var=var_p, scale=scale_p, win=owin(xwin, ywin), nsim=nsim)
total = c()
for (ii in 1:nsim)
{
ind <- paste("Simulation",ii)
total <- c(total,X[[ind]][["n"]])
}
X <- X[[paste("Simulation",which.min(abs(total-target_val)))]]
print(X[["n"]])
plot(X)
soil_LGCP <- as.matrix(as.data.frame(X))
writeMat(paste("soil_var_",val,".mat",sep=""), soil_LGCP=soil_LGCP, var_p=var_p,
mu_p=mu_p, scale_p=scale_p, xwin=xwin, ywin=ywin)
}
round(0.002)
round(0.002,4)
round(0.002,3)
library(spatstat)
library(R.matlab)
library(RandomFields)
library(pracma)
# generating different environments by varying bacterial dispersion (var_p)
# average intensity (number of cells) = exp(mu + var/2) (as var changes, mu needs to be adjusted
# to keep intensity fixed)
var_p <- 1.9
mu_p <- -7.52
scale_p <- 25
xwin = c(0,1000)
ywin = c(0,3000)
vec = c(logspace(-3,1.5,10),80)
target_val = exp(mu_p + var_p/2)*3001*1001 # expected number of bacteria in sim domain
nsim = 2000
for(val in vec)
{
var_p <- 1.9 - (1.9-val)
mu_p <- -7.52 + (1.9-val)/2
X <- rLGCP("exp", mu=mu_p, var=var_p, scale=scale_p, win=owin(xwin, ywin), nsim=nsim)
total = c()
for (ii in 1:nsim)
{
ind <- paste("Simulation",ii)
total <- c(total,X[[ind]][["n"]])
}
X <- X[[paste("Simulation",which.min(abs(total-target_val)))]]
print(X[["n"]])
plot(X)
soil_LGCP <- as.matrix(as.data.frame(X))
writeMat(paste("soil_var_",round(val,3),".mat",sep=""), soil_LGCP=soil_LGCP, var_p=var_p,
mu_p=mu_p, scale_p=scale_p, xwin=xwin, ywin=ywin)
}
library(spatstat)
library(R.matlab)
library(RandomFields)
library(pracma)
# homogeneous LGCP with exponential covariance function
# values reported in Raynaud and Nunan for 10^9 cells per g of soil
# scale = 25
# mu = -7.52
# var = 1.9
var_p <- 1.9
mu_p <- -7.52
scale_p <- 25
xwin <- c(0,1000)
ywin <- c(0,3000)
target_val <- exp(mu_p + var_p/2)*3001*1001 # expected number of bacteria in sim domain
nsim <- 2000
X <- rLGCP("exp", mu=mu_p, var=var_p, scale=scale_p, win=owin(xwin, ywin), nsim=nsim)
total = c()
for (ii in 1:nsim)
{
ind <- paste("Simulation",ii)
total <- c(total,X[[ind]][["n"]])
}
X <- X[[paste("Simulation",which.min(abs(total-target_val)))]]
print(X[["n"]])
plot(X)
soil_LGCP <- as.matrix(as.data.frame(X))
# writing all bacteria position into Matlab file
writeMat("soil_var_2.mat", soil_LGCP=soil_LGCP, var_p=var_p,
mu_p=mu_p, scale_p=scale_p, xwin=xwin, ywin=ywin)
# writing all bacteria position into Matlab file
writeMat("soil_var_2.mat", soil_LGCP=soil_LGCP, var_p=var_p,
mu_p=mu_p, scale_p=scale_p, xwin=xwin, ywin=ywin)
library(spatstat)
library(R.matlab)
library(RandomFields)
library(pracma)
# homogeneous LGCP with exponential covariance function
# values reported in Raynaud and Nunan for 10^9 cells per g of soil
var_p <- 1.9
mu_p <- -7.52
scale_p <- 25
xwin <- c(0,1000)
ywin <- c(0,3000)
target_val <- exp(mu_p + var_p/2)*3001*1001 # expected number of bacteria in sim domain
nsim <- 2000
X <- rLGCP("exp", mu=mu_p, var=var_p, scale=scale_p, win=owin(xwin, ywin), nsim=nsim)
total = c()
for (ii in 1:nsim)
{
ind <- paste("Simulation",ii)
total <- c(total,X[[ind]][["n"]])
}
# pick the simulation whose bacteria count is closest to expectation
X <- X[[paste("Simulation",which.min(abs(total-target_val)))]]
print(X[["n"]])
plot(X)
soil_LGCP <- as.matrix(as.data.frame(X))
# writing all bacteria position into Matlab file
writeMat("soil_var_2.mat", soil_LGCP=soil_LGCP, var_p=var_p,
mu_p=mu_p, scale_p=scale_p, xwin=xwin, ywin=ywin)
